{"version":3,"sources":["components/ExperienceField.js","components/EditingBody.js","components/Header.js","App.js","index.js"],"names":["ExperienceInput","props","experienceList","experienceArray","map","experience","name","type","placeholder","onChange","inputHandler","value","position","id","company","city","fromDate","toDate","onClick","delete","key","EditingBody","e","target","setState","console","log","state","experienceInputHandler","addExperienceField","uniqID","deleteEexperienceField","concat","preventDefault","targetID","filter","this","firstName","lastName","title","adress","phoneNumber","eMail","description","className","Component","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdd08d8a.chunk.js","sourcesContent":["\nimport React from 'react'\n\nexport default function ExperienceInput(props) {\n\n    const {experienceArray}=props;\n    const experienceList = experienceArray.map(experience=> \n        <form key={experience.key}>\n        <input name=\"position\" type=\"text\" placeholder=\"Position\" onChange={experience.inputHandler} value={experience.position} id={experience.id}/>\n        <input name=\"company\" type=\"text\" placeholder=\"Company\" onChange={experience.inputHandler} value={experience.company} id={experience.id}/>\n        <input name=\"city\" type=\"text\" placeholder=\"City\" onChange={experience.inputHandler} value={experience.city} id={experience.id}/>\n        <input name=\"fromDate\" type=\"date\"  onChange={experience.inputHandler} value={experience.fromDate} id={experience.id}/>\n        <input name=\"toDate\" type=\"date\"  onChange={experience.inputHandler} value={experience.toDate} id={experience.id} />\n        <button id={experience.id} onClick={experience.delete}> Delete </button>\n        </form> );\n\n\n\n    return (\n        <div>\n        {experienceList}\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport uniqID from 'uniqid';\nimport ExperienceField from './ExperienceField'; \n\nexport class EditingBody extends Component {\n  constructor(props) {\n      super(props)\n  \n      this.state = {     \n          experience : { \n            id : uniqID(),\n            key : uniqID(),\n            inputHandler : this.experienceInputHandler,\n            delete : this.deleteEexperienceField,\n        },       \n          experienceArray:[],\n\n             \n/*         firstName:'',\n           lastName:'',\n           title:'',\n           adress:'',\n           phoneNumber:'',\n           eMail:'',\n           description:' testing this',\n           position:'', \n           company:'',\n           city:'',\n           fromDate:'',\n           toDate:'', */\n\n      }\n  }\n\n  inputHandler = (e)=>{\n      const target = e.target;\n      const value = target.value;\n      const name = target.name\n    this.setState({\n       [name] : value,\n    },()=>{    console.log(this.state)})\n    \n/*     console.log(name,value,target) */\n  }\n  experienceInputHandler = (e)=>{\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n  this.setState({\n    experienceArray : this.state.experienceArray.map(experience => { \n      if(experience.id===target.id){\n        experience[name] = value;\n        return experience\n      }\n      else { return experience }\n    }\n       ) \n  },()=>{    console.log(this.state)})\n  \n/*     console.log(name,value,target) */\n}\n\n\n   addExperienceField =()=>{\n        this.setState({\n            experience: {\n                id : uniqID(),\n                key : uniqID(),\n                inputHandler : this.experienceInputHandler,\n                delete : this.deleteEexperienceField,\n            },\n            experienceArray : this.state.experienceArray.concat(this.state.experience)\n        },()=>{console.log(this.state.experienceArray)})\n    }\n\n    deleteEexperienceField=(e)=>{\n      e.preventDefault();\n      const targetID = e.target.id;\n      this.setState({\n        experienceArray : this.state.experienceArray.filter(experience=> experience.id!==targetID)\n      })\n    }\n    \n  \n    render() {\n        const {firstName,lastName,title,adress,phoneNumber,eMail,description,experienceArray}=this.state\n        return (\n            <div>\n                <div className=\"personalInfo\">\n                <h4>personal personalInfo</h4>\n                <form>\n                <input name=\"firstName\" type=\"text\" placeholder=\"First Name\" onChange={this.inputHandler} value={firstName}/>\n                <input name=\"lastName\" type=\"text\" placeholder=\"Last Name\" onChange={this.inputHandler}  value={lastName}/>\n                <input name=\"title\" type=\"text\" placeholder=\"Title\" onChange={this.inputHandler}  value={title}/>\n                <input name=\"adress\" type=\"text\" placeholder=\"Adress\" onChange={this.inputHandler}  value={adress}/>\n                <input name=\"phoneNumber\"type=\"text\" placeholder=\"Phone Number\" onChange={this.inputHandler}  value={phoneNumber}/>\n                <input name=\"eMail\" type=\"text\" placeholder=\"E-mail\" onChange={this.inputHandler}  value={eMail}/>\n                <textarea name=\"description\" placeholder=\"Description...\" onChange={this.inputHandler}  value={description}></textarea>\n                </form>\n                    </div>\n\n                    <div>\n                        <button onClick={this.addExperienceField}>add Experience</button>\n                        <ExperienceField experienceArray={experienceArray}/>\n                    </div>\n\n\n            </div>\n\n        )\n    }\n}\n\nexport default EditingBody\n","import React, { Component } from 'react'\n\nexport class Header extends Component {\n    render() {\n        return (\n            <div>\n                <h1>CV Makers</h1>\n            </div>\n        )\n    }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport EditingBody from './components/EditingBody'\nimport Header from './components/Header'\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n       <Header/>\n       <EditingBody/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}